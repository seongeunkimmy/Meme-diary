{"ast":null,"code":"import{FETCH_DIARY_SUCCESS,DELETE_DIARY,ADD_DIARY,DIARY_LOADING,ADD_DIARY_FAIL}from'./types';// import  axios  from 'axios';\nimport{tokenConfig}from'./authAction';import{returnErrors}from'./errorAction';import api from'../api/api.js';var getDiarySuccess=function getDiarySuccess(diaries){return{type:FETCH_DIARY_SUCCESS,diaries:diaries};};export var getDiary=function getDiary(id){return function(dispatch,getState){dispatch(diaryLoading());api.get(\"/api/diary/\".concat(id),tokenConfig(getState)).then(function(res){dispatch(getDiarySuccess(res.data));}).catch(function(err){dispatch(returnErrors(err.response.data,err.response.status));});};};export var diaryLoading=function diaryLoading(){return{type:DIARY_LOADING};};export var deleteDiary=function deleteDiary(id){return function(dispatch,getState){api.delete(\"/api/diary/delete/\".concat(id),tokenConfig(getState)).then(function(res){return dispatch({type:DELETE_DIARY,payload:id});}).catch(function(err){return dispatch(returnErrors(err.response.data,err.response.status));});};};export var addDiary=function addDiary(diary){return function(dispatch,getState){var body=JSON.stringify(diary);console.log(body);api.post('/api/diary',body,tokenConfig(getState)).then(function(res){return dispatch({type:ADD_DIARY,payload:res.data});}).catch(function(err){dispatch(returnErrors(err.response.data,err.response.status,'ADD_DIARY_FAIL'));dispatch({type:ADD_DIARY_FAIL});});};};","map":{"version":3,"sources":["/Users/seong-eunkim/Desktop/Meme-diary/client/src/actions/diariesAction.js"],"names":["FETCH_DIARY_SUCCESS","DELETE_DIARY","ADD_DIARY","DIARY_LOADING","ADD_DIARY_FAIL","tokenConfig","returnErrors","api","getDiarySuccess","diaries","type","getDiary","id","dispatch","getState","diaryLoading","get","then","res","data","catch","err","response","status","deleteDiary","delete","payload","addDiary","diary","body","JSON","stringify","console","log","post"],"mappings":"AAAA,OAAQA,mBAAR,CAA6BC,YAA7B,CAA2CC,SAA3C,CAAsDC,aAAtD,CAAqEC,cAArE,KAA2F,SAA3F,CACA;AACA,OAASC,WAAT,KAA4B,cAA5B,CACA,OAASC,YAAT,KAA6B,eAA7B,CACA,MAAOC,CAAAA,GAAP,KAAgB,eAAhB,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,OAAD,CAAa,CACnC,MAAO,CACLC,IAAI,CAAEV,mBADD,CAELS,OAAO,CAAEA,OAFJ,CAAP,CAID,CALD,CAQA,MAAO,IAAME,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,EAAE,QAAI,UAACC,QAAD,CAAWC,QAAX,CAAwB,CAClDD,QAAQ,CAACE,YAAY,EAAb,CAAR,CACIR,GAAG,CAACS,GAAJ,sBAAsBJ,EAAtB,EAA4BP,WAAW,CAACS,QAAD,CAAvC,EACCG,IADD,CACM,SAAAC,GAAG,CAAI,CACTL,QAAQ,CAACL,eAAe,CAACU,GAAG,CAACC,IAAL,CAAhB,CAAR,CACH,CAHD,EAICC,KAJD,CAIO,SAAAC,GAAG,CAAG,CACTR,QAAQ,CAACP,YAAY,CAACe,GAAG,CAACC,QAAJ,CAAaH,IAAd,CAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CAAR,CACH,CAND,EAOH,CATqB,EAAnB,CAYP,MAAO,IAAMR,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CAC9B,MAAO,CACHL,IAAI,CAAEP,aADH,CAAP,CAGH,CAJM,CAOP,MAAO,IAAMqB,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAZ,EAAE,QAAI,UAACC,QAAD,CAAWC,QAAX,CAAwB,CACrDP,GAAG,CAACkB,MAAJ,6BAAgCb,EAAhC,EAAsCP,WAAW,CAACS,QAAD,CAAjD,EACMG,IADN,CACW,SAAAC,GAAG,QACNL,CAAAA,QAAQ,CAAC,CACLH,IAAI,CAAET,YADD,CAELyB,OAAO,CAAEd,EAFJ,CAAD,CADF,EADd,EAMSQ,KANT,CAMgB,SAAAC,GAAG,QACPR,CAAAA,QAAQ,CAACP,YAAY,CAACe,GAAG,CAACC,QAAJ,CAAaH,IAAd,CAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CADD,EANnB,EAUH,CAX4B,EAAtB,CAaP,MAAO,IAAMI,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,KAAK,QAAI,UAACf,QAAD,CAAWC,QAAX,CAAwB,CAErD,GAAMe,CAAAA,IAAI,CAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAb,CACAI,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAEAtB,GAAG,CACC2B,IADJ,CACS,YADT,CACuBL,IADvB,CAC6BxB,WAAW,CAACS,QAAD,CADxC,EAEIG,IAFJ,CAES,SAAAC,GAAG,QACRL,CAAAA,QAAQ,CAAC,CACLH,IAAI,CAAER,SADD,CAELwB,OAAO,CAAER,GAAG,CAACC,IAFR,CAAD,CADA,EAFZ,EAQKC,KARL,CAQY,SAAAC,GAAG,CAAI,CACXR,QAAQ,CAACP,YAAY,CAACe,GAAG,CAACC,QAAJ,CAAaH,IAAd,CAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAyC,gBAAzC,CAAb,CAAR,CACAV,QAAQ,CAAC,CAACH,IAAI,CAAEN,cAAP,CAAD,CAAR,CACF,CAXN,EAYK,CAjBoB,EAAtB","sourcesContent":["import {FETCH_DIARY_SUCCESS, DELETE_DIARY, ADD_DIARY, DIARY_LOADING, ADD_DIARY_FAIL } from './types'\n// import  axios  from 'axios';\nimport { tokenConfig } from './authAction';\nimport { returnErrors } from './errorAction';\nimport api from '../api/api.js'\n\nconst getDiarySuccess = (diaries) => {\n  return {\n    type: FETCH_DIARY_SUCCESS,\n    diaries: diaries\n  }\n}\n\n\nexport const getDiary = id => (dispatch, getState) => {\n    dispatch(diaryLoading());\n        api.get(`/api/diary/${id}`, tokenConfig(getState))\n        .then(res => {\n            dispatch(getDiarySuccess(res.data))\n        })\n        .catch(err=> {\n            dispatch(returnErrors(err.response.data, err.response.status))\n        })\n    }\n\n\nexport const diaryLoading = () => {\n    return {\n        type: DIARY_LOADING\n    }\n}\n\n\nexport const deleteDiary = id => (dispatch, getState) => {\n    api.delete(`/api/diary/delete/${id}`, tokenConfig(getState))\n         .then(res => \n            dispatch({\n                type: DELETE_DIARY,\n                payload: id\n            }))\n            .catch (err => \n                dispatch(returnErrors(err.response.data, err.response.status))\n                )\n  \n}\n\nexport const addDiary = diary => (dispatch, getState) => {\n\n    const body = JSON.stringify(diary);\n    console.log(body);\n\n    api\n       .post('/api/diary', body, tokenConfig(getState))\n       .then(res => \n        dispatch({\n            type: ADD_DIARY,\n            payload: res.data\n        })\n        )\n        .catch (err => {\n            dispatch(returnErrors(err.response.data, err.response.status, 'ADD_DIARY_FAIL'));\n            dispatch({type: ADD_DIARY_FAIL})\n         });\n        }\n           \n    \n"]},"metadata":{},"sourceType":"module"}