{"ast":null,"code":"import { FETCH_DIARY_SUCCESS, DELETE_DIARY, ADD_DIARY, DIARY_LOADING, ADD_DIARY_FAIL } from '../actions/types';\nconst initialState = {\n  diaries: [],\n  loading: false\n}; // const executeFetchDiarySuccess = (state, action) => {\n//   return {\n//     ...state,\n//     diaries: action.diaries,\n//     loading: false\n//   }\n// }\n\nconst diariesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_DIARY_SUCCESS:\n      console.log(action);\n      return { ...state,\n        diaries: action.diaries,\n        loading: false\n      };\n\n    case DELETE_DIARY:\n      console.log(action);\n      return { ...state,\n        diaries: state.diaries.filter(diary => diary._id !== action.payload)\n      };\n\n    case ADD_DIARY:\n      return { ...state,\n        diaries: [action.payload, ...state.diaries]\n      };\n\n    case ADD_DIARY_FAIL:\n      return { ...state\n      };\n\n    case DIARY_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default diariesReducer;","map":{"version":3,"sources":["/Users/seong-eunkim/Desktop/Meme-diary/client/src/reducers/diariesReducer.js"],"names":["FETCH_DIARY_SUCCESS","DELETE_DIARY","ADD_DIARY","DIARY_LOADING","ADD_DIARY_FAIL","initialState","diaries","loading","diariesReducer","state","action","type","console","log","filter","diary","_id","payload"],"mappings":"AAAA,SAASA,mBAAT,EAA8BC,YAA9B,EAA4CC,SAA5C,EAAuDC,aAAvD,EAAsEC,cAAtE,QAA6F,kBAA7F;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,OAAO,EAAE;AAFU,CAArB,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACvD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKX,mBAAL;AACEY,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,aAAO,EACH,GAAGD,KADA;AAEHH,QAAAA,OAAO,EAAEI,MAAM,CAACJ,OAFb;AAGHC,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAMF,SAAKN,YAAL;AACEW,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,aAAO,EACL,GAAGD,KADE;AAELH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,CAAcQ,MAAd,CAAqBC,KAAK,IAAIA,KAAK,CAACC,GAAN,KAAcN,MAAM,CAACO,OAAnD;AAFJ,OAAP;;AAIF,SAAKf,SAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHH,QAAAA,OAAO,EAAE,CAACI,MAAM,CAACO,OAAR,EAAiB,GAAGR,KAAK,CAACH,OAA1B;AAFN,OAAP;;AAIJ,SAAKF,cAAL;AACI,aAAO,EACL,GAAGK;AADE,OAAP;;AAGJ,SAAKN,aAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHF,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIL;AACE,aAAOE,KAAP;AA9BH;AAgCD,CAjCD;;AAmCA,eAAeD,cAAf","sourcesContent":["import { FETCH_DIARY_SUCCESS, DELETE_DIARY, ADD_DIARY, DIARY_LOADING, ADD_DIARY_FAIL  } from '../actions/types'\n\nconst initialState = {\n  diaries: [],\n  loading: false\n}\n\n// const executeFetchDiarySuccess = (state, action) => {\n//   return {\n//     ...state,\n//     diaries: action.diaries,\n//     loading: false\n//   }\n// }\n\n\nconst diariesReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case FETCH_DIARY_SUCCESS:\n      console.log(action)\n      return {\n          ...state,\n          diaries: action.diaries,\n          loading: false\n        \n      }\n    case DELETE_DIARY:\n      console.log(action)\n      return {\n        ...state,\n        diaries: state.diaries.filter(diary => diary._id !== action.payload)\n    }\n    case ADD_DIARY:\n        return {\n            ...state, \n            diaries: [action.payload, ...state.diaries]\n        }\n    case ADD_DIARY_FAIL:\n        return {\n          ...state\n        };\n    case DIARY_LOADING:\n        return {\n            ...state,\n            loading: true\n        }\n   default:\n     return state;\n  }\n}\n\nexport default diariesReducer;"]},"metadata":{},"sourceType":"module"}