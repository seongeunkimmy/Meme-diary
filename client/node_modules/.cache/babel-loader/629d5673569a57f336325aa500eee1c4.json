{"ast":null,"code":"import axios from 'axios';\nimport { returnErrors } from './errorAction';\nimport api from '../api/api';\nimport { USER_LOADED, USER_LOADING, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS, REGISTER_SUCCESS, REGISTER_FAIL } from './types';\nexport const loadUser = () => (dispatch, getState) => {\n  dispatch({\n    type: USER_LOADING\n  }); //  Get token and add to headers\n\n  const token = getState().auth.token;\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  };\n\n  if (token) {\n    config.headers['x-auth-token'] = token;\n  }\n\n  api.get('/api/auth/user', config).then(res => dispatch({\n    type: USER_LOADED,\n    payload: res.data\n  })).catch(err => {\n    dispatch(returnErrors(err.response.data, err.response.status));\n    dispatch({\n      type: AUTH_ERROR\n    });\n  });\n}; // const tokenConfig = getState => {\n// //Get token and add to headers\n// const token = getState().auth.token;\n// const config = {\n//     headers: {\n//         \"Content-type\": \"application/json\"\n//     }\n// }\n// if(token) {\n//     config.headers['x-auth-token'] = token;\n// }\n// return config;\n// }","map":{"version":3,"sources":["/Users/seong-eunkim/Desktop/Meme-diary/client/src/actions/authAction.js"],"names":["axios","returnErrors","api","USER_LOADED","USER_LOADING","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","REGISTER_SUCCESS","REGISTER_FAIL","loadUser","dispatch","getState","type","token","auth","config","headers","get","then","res","payload","data","catch","err","response","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SACIC,WADJ,EAEIC,YAFJ,EAGIC,UAHJ,EAIIC,aAJJ,EAKIC,UALJ,EAMIC,cANJ,EAOIC,gBAPJ,EAQIC,aARJ,QASO,SATP;AAWA,OAAO,MAAMC,QAAQ,GAAG,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAClDD,EAAAA,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAEV;AAAP,GAAD,CAAR,CADkD,CAElD;;AACJ,QAAMW,KAAK,GAAGF,QAAQ,GAAGG,IAAX,CAAgBD,KAA9B;AACA,QAAME,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf;;AAMA,MAAGH,KAAH,EAAU;AACNE,IAAAA,MAAM,CAACC,OAAP,CAAe,cAAf,IAAiCH,KAAjC;AACH;;AAEGb,EAAAA,GAAG,CAACiB,GAAJ,CAAQ,gBAAR,EAA0BF,MAA1B,EACGG,IADH,CACQC,GAAG,IAAIT,QAAQ,CAAC;AAClBE,IAAAA,IAAI,EAAEX,WADY;AAElBmB,IAAAA,OAAO,EAAED,GAAG,CAACE;AAFK,GAAD,CADvB,EAKGC,KALH,CAKSC,GAAG,IAAI;AACVb,IAAAA,QAAQ,CAACX,YAAY,CAACwB,GAAG,CAACC,QAAJ,CAAaH,IAAd,EAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CAAR;AACAf,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAET;AADD,KAAD,CAAR;AAIH,GAXH;AAYC,CA1BE,C,CA6BP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from 'axios';\nimport { returnErrors } from './errorAction'\nimport api from '../api/api';\nimport {\n    USER_LOADED, \n    USER_LOADING, \n    AUTH_ERROR, \n    LOGIN_SUCCESS, \n    LOGIN_FAIL, \n    LOGOUT_SUCCESS, \n    REGISTER_SUCCESS, \n    REGISTER_FAIL \n} from './types';\n\nexport const loadUser = () => (dispatch, getState) => {\n    dispatch({type: USER_LOADING});\n    //  Get token and add to headers\nconst token = getState().auth.token;\nconst config = {\n    headers: {\n        \"Content-type\": \"application/json\"\n    }\n}\n\nif(token) {\n    config.headers['x-auth-token'] = token;\n}\n    \n    api.get('/api/auth/user', config)\n      .then(res => dispatch({\n          type: USER_LOADED,\n          payload: res.data\n      }))\n      .catch(err => {\n          dispatch(returnErrors(err.response.data, err.response.status));\n          dispatch({\n              type: AUTH_ERROR\n          });\n      \n      });\n    };\n\n\n// const tokenConfig = getState => {\n// //Get token and add to headers\n// const token = getState().auth.token;\n// const config = {\n//     headers: {\n//         \"Content-type\": \"application/json\"\n//     }\n// }\n\n// if(token) {\n//     config.headers['x-auth-token'] = token;\n// }\n// return config;\n// }\n\n"]},"metadata":{},"sourceType":"module"}