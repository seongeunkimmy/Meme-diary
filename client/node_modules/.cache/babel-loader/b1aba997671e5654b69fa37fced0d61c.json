{"ast":null,"code":"import { FETCH_DIARY_SUCCESS, DELETE_DIARY, ADD_DIARY, DIARY_LOADING, ADD_DIARY_FAIL } from './types'; // import  axios  from 'axios';\n\nimport { tokenConfig } from './authAction';\nimport { returnErrors } from './errorAction';\nimport api from '../api/api.js';\n\nconst getDiarySuccess = diaries => {\n  return {\n    type: FETCH_DIARY_SUCCESS,\n    diaries: diaries\n  };\n};\n\nexport const getDiary = id => (dispatch, getState) => {\n  // dispatch(diaryLoading());\n  api.get(`/api/diary/${id}`, tokenConfig(getState)).then(res => {\n    dispatch(getDiarySuccess(res.data));\n  }).catch(err => {\n    dispatch(returnErrors(err.response.data, err.response.status));\n  });\n};\nexport const diaryLoading = () => {\n  return {\n    type: DIARY_LOADING\n  };\n};\nexport const deleteDiary = id => (dispatch, getState) => {\n  api.delete(`/api/diary/delete/${id}`, tokenConfig(getState)).then(res => dispatch({\n    type: DELETE_DIARY,\n    payload: id\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const addDiary = diary => (dispatch, getState) => {\n  const body = JSON.stringify(diary);\n  console.log(body);\n  api.post('/api/diary', body, tokenConfig(getState)).then(res => dispatch({\n    type: ADD_DIARY,\n    payload: res.data\n  })).catch(err => {\n    dispatch(returnErrors(err.response.data, err.response.status, 'ADD_DIARY_FAIL'));\n    dispatch({\n      type: ADD_DIARY_FAIL\n    });\n  });\n};","map":{"version":3,"sources":["/Users/seong-eunkim/Desktop/Meme-diary/client/src/actions/diariesAction.js"],"names":["FETCH_DIARY_SUCCESS","DELETE_DIARY","ADD_DIARY","DIARY_LOADING","ADD_DIARY_FAIL","tokenConfig","returnErrors","api","getDiarySuccess","diaries","type","getDiary","id","dispatch","getState","get","then","res","data","catch","err","response","status","diaryLoading","deleteDiary","delete","payload","addDiary","diary","body","JSON","stringify","console","log","post"],"mappings":"AAAA,SAAQA,mBAAR,EAA6BC,YAA7B,EAA2CC,SAA3C,EAAsDC,aAAtD,EAAqEC,cAArE,QAA2F,SAA3F,C,CACA;;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,GAAP,MAAgB,eAAhB;;AAEA,MAAMC,eAAe,GAAIC,OAAD,IAAa;AACnC,SAAO;AACLC,IAAAA,IAAI,EAAEV,mBADD;AAELS,IAAAA,OAAO,EAAEA;AAFJ,GAAP;AAID,CALD;;AAQA,OAAO,MAAME,QAAQ,GAAGC,EAAE,IAAI,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAClD;AACIP,EAAAA,GAAG,CAACQ,GAAJ,CAAS,cAAaH,EAAG,EAAzB,EAA4BP,WAAW,CAACS,QAAD,CAAvC,EACCE,IADD,CACMC,GAAG,IAAI;AACTJ,IAAAA,QAAQ,CAACL,eAAe,CAACS,GAAG,CAACC,IAAL,CAAhB,CAAR;AACH,GAHD,EAICC,KAJD,CAIOC,GAAG,IAAG;AACTP,IAAAA,QAAQ,CAACP,YAAY,CAACc,GAAG,CAACC,QAAJ,CAAaH,IAAd,EAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CAAR;AACH,GAND;AAOH,CATE;AAYP,OAAO,MAAMC,YAAY,GAAG,MAAM;AAC9B,SAAO;AACHb,IAAAA,IAAI,EAAEP;AADH,GAAP;AAGH,CAJM;AAOP,OAAO,MAAMqB,WAAW,GAAGZ,EAAE,IAAI,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACrDP,EAAAA,GAAG,CAACkB,MAAJ,CAAY,qBAAoBb,EAAG,EAAnC,EAAsCP,WAAW,CAACS,QAAD,CAAjD,EACME,IADN,CACWC,GAAG,IACNJ,QAAQ,CAAC;AACLH,IAAAA,IAAI,EAAET,YADD;AAELyB,IAAAA,OAAO,EAAEd;AAFJ,GAAD,CAFhB,EAMSO,KANT,CAMgBC,GAAG,IACPP,QAAQ,CAACP,YAAY,CAACc,GAAG,CAACC,QAAJ,CAAaH,IAAd,EAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CAPpB;AAUH,CAXM;AAaP,OAAO,MAAMK,QAAQ,GAAGC,KAAK,IAAI,CAACf,QAAD,EAAWC,QAAX,KAAwB;AAErD,QAAMe,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAb;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEAtB,EAAAA,GAAG,CACC2B,IADJ,CACS,YADT,EACuBL,IADvB,EAC6BxB,WAAW,CAACS,QAAD,CADxC,EAEIE,IAFJ,CAESC,GAAG,IACRJ,QAAQ,CAAC;AACLH,IAAAA,IAAI,EAAER,SADD;AAELwB,IAAAA,OAAO,EAAET,GAAG,CAACC;AAFR,GAAD,CAHZ,EAQKC,KARL,CAQYC,GAAG,IAAI;AACXP,IAAAA,QAAQ,CAACP,YAAY,CAACc,GAAG,CAACC,QAAJ,CAAaH,IAAd,EAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,EAAyC,gBAAzC,CAAb,CAAR;AACAT,IAAAA,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAEN;AAAP,KAAD,CAAR;AACF,GAXN;AAYK,CAjBF","sourcesContent":["import {FETCH_DIARY_SUCCESS, DELETE_DIARY, ADD_DIARY, DIARY_LOADING, ADD_DIARY_FAIL } from './types'\n// import  axios  from 'axios';\nimport { tokenConfig } from './authAction';\nimport { returnErrors } from './errorAction';\nimport api from '../api/api.js'\n\nconst getDiarySuccess = (diaries) => {\n  return {\n    type: FETCH_DIARY_SUCCESS,\n    diaries: diaries\n  }\n}\n\n\nexport const getDiary = id => (dispatch, getState) => {\n    // dispatch(diaryLoading());\n        api.get(`/api/diary/${id}`, tokenConfig(getState))\n        .then(res => {\n            dispatch(getDiarySuccess(res.data))\n        })\n        .catch(err=> {\n            dispatch(returnErrors(err.response.data, err.response.status))\n        })\n    }\n\n\nexport const diaryLoading = () => {\n    return {\n        type: DIARY_LOADING\n    }\n}\n\n\nexport const deleteDiary = id => (dispatch, getState) => {\n    api.delete(`/api/diary/delete/${id}`, tokenConfig(getState))\n         .then(res => \n            dispatch({\n                type: DELETE_DIARY,\n                payload: id\n            }))\n            .catch (err => \n                dispatch(returnErrors(err.response.data, err.response.status))\n                )\n  \n}\n\nexport const addDiary = diary => (dispatch, getState) => {\n\n    const body = JSON.stringify(diary);\n    console.log(body);\n\n    api\n       .post('/api/diary', body, tokenConfig(getState))\n       .then(res => \n        dispatch({\n            type: ADD_DIARY,\n            payload: res.data\n        })\n        )\n        .catch (err => {\n            dispatch(returnErrors(err.response.data, err.response.status, 'ADD_DIARY_FAIL'));\n            dispatch({type: ADD_DIARY_FAIL})\n         });\n        }\n           \n    \n"]},"metadata":{},"sourceType":"module"}