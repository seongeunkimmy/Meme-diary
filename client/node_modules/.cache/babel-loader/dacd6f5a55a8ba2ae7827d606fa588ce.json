{"ast":null,"code":"var _jsxFileName = \"/Users/seong-eunkim/Desktop/Meme-diary/client/src/pages/auth/PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const {\n    isAuthenticated\n  } = rest;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => isAuthenticated ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 54\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PrivateRoute;\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.bool\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: state.auth.isAuthenticated\n  };\n}\n\nexport default connect(mapStateToProps)(PrivateRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/seong-eunkim/Desktop/Meme-diary/client/src/pages/auth/PrivateRoute.js"],"names":["React","Route","Redirect","connect","PropTypes","PrivateRoute","component","Component","rest","isAuthenticated","props","propTypes","bool","mapStateToProps","state","auth"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAC1D,QAAM;AAAEC,IAAAA;AAAF,MAAsBD,IAA5B;AAEA,sBAEE,QAAC,KAAD,OACMA,IADN;AAEE,IAAA,MAAM,EAAEE,KAAK,IACXD,eAAe,gBAAG,QAAC,SAAD,OAAeC;AAAf;AAAA;AAAA;AAAA;AAAA,YAAH,gBAA8B,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAHjD;AAAA;AAAA;AAAA;AAAA,UAFF;AASD,CAZD;;KAAML,Y;AAcNA,YAAY,CAACM,SAAb,GAAyB;AACvBF,EAAAA,eAAe,EAAEL,SAAS,CAACQ;AADJ,CAAzB;;AAIA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLL,IAAAA,eAAe,EAAEK,KAAK,CAACC,IAAN,CAAWN;AADvB,GAAP;AAGD;;AAED,eAAeN,OAAO,CAACU,eAAD,CAAP,CAAyBR,YAAzB,CAAf","sourcesContent":["\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const { isAuthenticated } = rest;\n\n  return (\n \n    <Route\n      {...rest}\n      render={props =>\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />\n      }\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.bool\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: state.auth.isAuthenticated\n  };\n}\n\nexport default connect(mapStateToProps)(PrivateRoute);"]},"metadata":{},"sourceType":"module"}